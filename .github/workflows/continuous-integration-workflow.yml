name: CI
on: push
jobs:
  setup-python:
    name: Setup Python
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: scotty
          POSTGRES_PASSWORD: scotty
          POSTGRES_DB: scotty_test
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
    - name: install libpq-dev
      run: sudo apt-get install libpq-dev #https://github.com/actions/virtual-environments/issues/12
    - run: pip install poetry
    - run: poetry install
    - run: make check
      env:
        SCOTTY_DATABASE_URI: postgresql://scotty:scotty@localhost:${{ job.services.postgres.ports[5432] }}/scotty_test


  setup-node:
    name: Setup node-js
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: 8
    - run: |
        curl -o- -L https://yarnpkg.com/install.sh | bash
        export PATH=$HOME/.yarn/bin:$PATH
    - uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.x'
    - run: gem install scss_lint
    - name: build frontend
      working-directory: webapp
      run: |
        yarn install
        yarn lint:js
        ./node_modules/ember-cli/bin/ember build

  check-artifacts:
    name: Check ${{ matrix.artifact }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        artifact: [transporter, combadge]
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            test_command: cross test --target x86_64-unknown-linux-musl
          - os: windows-latest
            test_command: cargo test
          - os: macos-latest
            test_command: cargo test
    steps:
    - uses: actions/checkout@v1
    - uses: actions-rs/cargo@v1
    - working-directory: ${{ matrix.artifact }}
      run: |
        cargo check
        cargo test
        rustup component add rustfmt clippy
        cargo fmt -- --check
        cargo clippy --all-targets --all-features -- -D warnings
